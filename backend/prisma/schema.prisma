generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Market {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  description String @unique
  cnpj        String @unique
  address     String

  purchase      Purchase[]
  price_history PriceHistory[]
}

model Product {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  code        Int    @unique
  description String

  measurement_unit    MeasurementUnit @relation(fields: [measurement_unit_id], references: [id])
  measurement_unit_id Int

  price_history PriceHistory[]
  purchased_item PurchasedProduct[]
}

model MeasurementUnit {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  description String @unique

  product Product[]
}

model Purchase {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  total_price    Float
  purchased_date DateTime @default(now())

  market_id Int
  market    Market @relation(fields: [market_id], references: [id])

  purchased_items PurchasedProduct[]
}

model PurchasedProduct {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  quantity      Float
  unitary_price Float
  total_price   Float

  purchase_id Int
  purchase    Purchase @relation(fields: [purchase_id], references: [id])

  product_id Int
  product    Product @relation(fields: [product_id], references: [id])
}

model PriceHistory {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  product_id Int
  product    Product @relation(fields: [product_id], references: [id])
  market_id  Int
  market     Market  @relation(fields: [market_id], references: [id])

  date  DateTime
  price Float
}
