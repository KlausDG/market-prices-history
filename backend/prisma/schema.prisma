generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Market {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  description String @unique
  cnpj        String @unique
  address     String

  Purchase Purchase[]
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  code             Int    @unique
  description      String

  measurementUnit MeasurementUnit @relation(fields: [measurementUnitId], references: [id])
  measurementUnitId Int

  PriceHistory PriceHistory[]

  PurchaseItem PurchaseItem[]
}

model MeasurementUnit {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())

  updatedAt    DateTime @updatedAt
  name         String?  @unique
  abbreviation String   @unique
  description  String?

  Product Product[]
}

model Purchase {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  marketId    Int
  market      Market    @relation(fields: [marketId], references: [id])

  totalAmount Float     
  PurchaseItems PurchaseItem[]
}

model PurchaseItem {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  purchaseId   Int
  purchase     Purchase  @relation(fields: [purchaseId], references: [id])

  productId    Int
  product      Product   @relation(fields: [productId], references: [id])

  quantity     Float
  unitPrice    Float
  totalPrice   Float
}

model PriceHistory {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  productId   Int
  product     Product   @relation(fields: [productId], references: [id])

  date        DateTime
  price       Float   
}